input {

  file {

    path => "pathtobereplaced"

    start_position => "beginning"

    type => "logs"
    sincedb_path => "NUL"

  }

}

filter {
grok {
   match =>{"message" => "%{DATE:dt}-%{TIME:time} +\ %{NUMBER:id} +\ %{BASE16NUM:thread} +\ %{WORD:buffer}:INFO SERV ELOG +\ %{BASE16NUM:num} : %{BASE16NUM:num2} +\ Bus %{NUMBER:bus} Enclosure %{NUMBER:encl} Disk %{NUMBER:disk} %{GREEDYDATA:msg}"}

remove_tag=>["_grokparsefailure"]
}

if "_grokparsefailure" in [tags]{
grok{
   match => {"message"=>"%{DATE:dt}-%{TIME:time} +\ %{NUMBER:id} +\ %{BASE16NUM:thread} +\ %{WORD:buffer}:WARN OBJ +\ %{NUMBER:num} DSK:%{NUMBER:bus}_%{NUMBER:encl}_%{NUMBER:disk}: cc error, %{NOTSPACE:code} %{GREEDYDATA:msg}"}	
remove_tag=>["_grokparsefailure"]
}
}
if "_grokparsefailure" in [tags]{
grok {

  match => { "message" => "%{DATE:dt}-%{TIME:time} +\ %{NUMBER:id} +\ %{BASE16NUM:thread} +\ %{WORD:buffer}:%{GREEDYDATA:msg}" }
   

 }
}

}


output {

  elasticsearch {

    hosts => ["localhost:9200"]
    index => "indextobereplaced"

  }

  stdout { codec => rubydebug }

}
