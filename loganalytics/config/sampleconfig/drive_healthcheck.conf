input {

  file {

    path => "pathtobereplaced"

    start_position => "beginning"

    type => "logs"
    sincedb_path => "NUL"

  }

}

filter {
grok {
	match =>{"message" => "%{WORD} +\ %{DATE:dt} %{TIME:time} Bus%{BASE16NUM:bus} Enc%{NUMBER:encl} Dsk%{BASE16NUM:disk} +\ 801 Soft SCSI Bus Error \[%{GREEDYDATA:msg}\] %{GREEDYDATA}"}
	
	remove_tag=>["_grokparsefailure"]
}

if "_grokparsefailure" in [tags]{
	grok{
		match => {"message"=>"%{WORD} +\ %{DATE:dt} %{TIME:time} Bus%{BASE16NUM:bus} Enc%{NUMBER:encl} Dsk%{BASE16NUM:disk} +\ 820 Soft Media Error \[%{GREEDYDATA:error}\] %{GREEDYDATA}"}	
		remove_tag=>["_grokparsefailure"]
	}
}

if "_grokparsefailure" in [tags]{
	grok{
		match => {"message"=>"%{WORD} +\ %{DATE:dt} %{TIME:time} Bus%{BASE16NUM:bus} Enc%{NUMBER:encl} Dsk%{BASE16NUM:disk} +\ 840 Data Sector Invalidated %{GREEDYDATA}"}	
		remove_tag=>["_grokparsefailure"]
	}
}

if "_grokparsefailure" in [tags]{
	grok{
		match => {"message"=>"%{WORD} +\ %{DATE:dt} %{TIME:time} Bus%{BASE16NUM:bus} Enc%{NUMBER:encl} Dsk%{BASE16NUM:disk} +\ 689 Sector Reconstructed %{GREEDYDATA}"}	
		remove_tag=>["_grokparsefailure"]
	}
}

if "_grokparsefailure" in [tags]{
	grok{
		match => {"message"=>"%{WORD} +\ %{DATE:dt} %{TIME:time} Bus%{BASE16NUM:bus} Enc%{NUMBER:encl} Dsk%{BASE16NUM:disk} +\ %{GREEDYDATA}"}	
		remove_tag=>["_grokparsefailure"]
	}
}

if "_grokparsefailure" in [tags]{
	grok {
		match => {"message"=>"%{WORD} +\ %{DATE:dt} %{TIME:time} %{GREEDYDATA}"}	
	}
}

}


output {

  elasticsearch {

    hosts => ["localhost:9200"]
    index => "indextobereplaced"

  }
}
